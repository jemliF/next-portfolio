{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\fjemli\\\\Documents\\\\dev\\\\next\\\\next-portfolio\\\\pages\\\\about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Link from 'next/link';\nimport { Component } from \"react\";\nimport Error from \"./_error\";\n/* import fetch from 'isomorphic-unfetch'; */\n\n/* import fetch from 'node-fetch'; */\n\nimport Layout from \"../components/Layout\";\n\nvar About = /*#__PURE__*/function (_Component) {\n  _inherits(About, _Component);\n\n  var _super = _createSuper(About);\n\n  function About() {\n    _classCallCheck(this, About);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(About, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          statusCode = _this$props.statusCode;\n\n      if (statusCode) {\n        return __jsx(Error, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return __jsx(Layout, {\n        title: \"About\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, user.name, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, user.bio), __jsx(\"img\", {\n        src: user.avatar_url,\n        alt: \"JS\",\n        height: \"200px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n        var res, statusCode, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('https://api.github.com/users/fezfe');\n\n              case 2:\n                res = _context.sent;\n                statusCode = res.status > 200 ? res.status : false;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                data = _context.sent;\n                return _context.abrupt(\"return\", {\n                  user: data,\n                  statusCode: statusCode\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return About;\n}(Component);\n\nexport { About as default };","map":{"version":3,"sources":["C:/Users/fjemli/Documents/dev/next/next-portfolio/pages/about.js"],"names":["Link","Component","Error","Layout","About","props","user","statusCode","name","bio","avatar_url","ctx","fetch","res","status","json","data"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA;;AACA;;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;IAEqBC,K;;;;;;;;;;;;;6BASR;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,UADR,eACQA,UADR;;AAEL,UAAGA,UAAH,EAAe;AACX,eAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aACI,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACE,IADV,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIF,IAAI,CAACG,GAAT,CAFJ,EAGI;AAAK,QAAA,GAAG,EAAEH,IAAI,CAACI,UAAf;AAA2B,QAAA,GAAG,EAAC,IAA/B;AAAoC,QAAA,MAAM,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAOH;;;;uGAnB4BC,G;;;;;;;uBACPC,KAAK,CAAC,oCAAD,C;;;AAAjBC,gBAAAA,G;AACAN,gBAAAA,U,GAAaM,GAAG,CAACC,MAAJ,GAAa,GAAb,GAAmBD,GAAG,CAACC,MAAvB,GAAgC,K;;uBAChCD,GAAG,CAACE,IAAJ,E;;;AAAbC,gBAAAA,I;iDACC;AAACV,kBAAAA,IAAI,EAAEU,IAAP;AAAaT,kBAAAA,UAAU,EAAVA;AAAb,iB;;;;;;;;;;;;;;;;;;;EANoBN,S;;SAAdG,K","sourcesContent":["import Link from 'next/link';\r\nimport {Component} from \"react\";\r\nimport Error from \"./_error\";\r\n/* import fetch from 'isomorphic-unfetch'; */\r\n/* import fetch from 'node-fetch'; */\r\n\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default class About extends Component {\r\n\r\n    static async getInitialProps(ctx) {\r\n        const res = await fetch('https://api.github.com/users/fezfe');\r\n        const statusCode = res.status > 200 ? res.status : false;\r\n        const data = await res.json();\r\n        return {user: data, statusCode};\r\n    }\r\n\r\n    render() {\r\n        const {user, statusCode} = this.props;\r\n        if(statusCode) {\r\n            return <Error/>\r\n        }\r\n        return (\r\n            <Layout title=\"About\">\r\n                {user.name}\r\n                <p>{user.bio}</p>\r\n                <img src={user.avatar_url} alt=\"JS\" height=\"200px\"/>\r\n            </Layout>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}